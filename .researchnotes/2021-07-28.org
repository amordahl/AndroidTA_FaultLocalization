* High-Level Goals for Today
** TODO Add code to compute most likely fault sites to coveragecomparer.
- I added the code to take all files instead of a pair. But I still have to write the code to actually compute the suspiciousness of statements.
** DONE Look through Dakota's violation differences to figure out why he can't recreate the ones my script gave.
- It does not seem my script is the issue. It seems something went wrong when generating the droidbench files with AQL. Dakota will further investigate.
** DONE Investigate the dataflowsolver flowinsensitive option and see why it produces a violation.

- I don't know why this is happening but it's clear the flowsensitive implementation is unsound. I.e., this found a bug in the default configuration. Button5.apk gives an interesting perspective of the type of flows the flowsensitive wrapper cannot analyze.
* Meeting with Dakota
- Dakota will investigate why droidbench results are incorrect and inconsistent on the server. Probably an issue with parallelism.
- Dakota will also read the paper again and see if there is an algorithm to compute transitive closures, so we can reimplement this strategy in our own code.

