<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='ndk'><qualifier type='Name' identifier='mod'></qualifier></name></packageDeclaration><imports><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='Activity'><qualifier type='Name' identifier='app'><qualifier type='Name' identifier='android'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='Context'><qualifier type='Name' identifier='content'><qualifier type='Name' identifier='android'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='Bundle'><qualifier type='Name' identifier='os'><qualifier type='Name' identifier='android'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='View'><qualifier type='Name' identifier='view'><qualifier type='Name' identifier='android'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='OnClickListener'><qualifier type='Name' identifier='View'><qualifier type='Name' identifier='view'><qualifier type='Name' identifier='android'></qualifier></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='Button'><qualifier type='Name' identifier='widget'><qualifier type='Name' identifier='android'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='Toast'><qualifier type='Name' identifier='widget'><qualifier type='Name' identifier='android'></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='ActMain'></name><comment type='JavadocComment' content='
 * @testcase_name JavaIDFunction
 * @version 0.1
 * @author Secure Software Engineering Group (SSE), European Center for Security and Privacy by Design (EC SPRIDE) 
 * @author_mail steven.arzt@cased.de
 * 
 * @description Sends tainted data from Java to Native to Java and back to native where it is leaked
 * @dataflow source -> imei -> native method -> Java idFunc method -> native -> leak in native
 * @number_of_leaks 1
 * @challenges the analysis must handle native code with callbacks back to Java
 '></comment><extendedTypes><extendedType type='ClassOrInterfaceType'><name type='SimpleName' identifier='Activity'></name></extendedType></extendedTypes><members><member type='InitializerDeclaration' isStatic='true'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='loadLibrary'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope><arguments><argument type='StringLiteralExpr' value='ndkmod'></argument></arguments></expression></statement></statements></body></member><member type='MethodDeclaration'><type type='PrimitiveType' type='BOOLEAN'></type><name type='SimpleName' identifier='cFuncDoTheMagic'></name><comment type='LineComment' content=' C with params'></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='NATIVE'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='c'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Context'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='foo_'></left><right type='NameExpr'><name type='SimpleName' identifier='in'></name></right></left><right type='StringLiteralExpr' value='_bar'></right></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='idFunc'></name><comment type='LineComment' content=' ___________________'></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='in'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='onCreate'></name><scope type='SuperExpr'></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='savedInstanceState'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='setContentView'></name><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='lay_main'></name><scope type='FieldAccessExpr'><name type='SimpleName' identifier='layout'></name><scope type='NameExpr'><name type='SimpleName' identifier='R'></name></scope></scope></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='CastExpr'><expression type='MethodCallExpr'><name type='SimpleName' identifier='findViewById'></name><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='button1'></name><scope type='FieldAccessExpr'><name type='SimpleName' identifier='id'></name><scope type='NameExpr'><name type='SimpleName' identifier='R'></name></scope></scope></argument></arguments></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Button'></name></type></initializer><name type='SimpleName' identifier='button'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Button'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='setOnClickListener'></name><scope type='NameExpr'><name type='SimpleName' identifier='button'></name></scope><arguments><argument type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='OnClickListener'></name></type><anonymousClassBody><anonymousClassBod type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='cFuncDoTheMagic'></name><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getApplicationContext'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='show'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='makeText'></name><scope type='NameExpr'><name type='SimpleName' identifier='Toast'></name></scope><arguments><argument type='ThisExpr'><typeName type='Name' identifier='ActMain'></typeName></argument><argument type='StringLiteralExpr' value='ok'></argument><argument type='FieldAccessExpr'><name type='SimpleName' identifier='LENGTH_LONG'></name><scope type='NameExpr'><name type='SimpleName' identifier='Toast'></name></scope></argument></arguments></scope></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='onClick'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='arg0'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='View'></name></type></parameter></parameters><annotations><annotation type='MarkerAnnotationExpr'><name type='Name' identifier='Override'></name></annotation></annotations></anonymousClassBod></anonymousClassBody></argument></arguments></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='onCreate'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='savedInstanceState'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Bundle'></name></type></parameter></parameters><annotations><annotation type='MarkerAnnotationExpr'><name type='Name' identifier='Override'></name></annotation></annotations></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></type></types></root>